name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  automated-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.200"
      - name: Install dependencies
        run: | 
              cd Tests
              dotnet restore
      - name: Run Tests
        run: dotnet test ./Tests/Tests.csproj --no-restore --verbosity normal

  build-and-push-image:
    needs: [automated-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cd waypoint-generator
      - name: Set outputs
        id: vars
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.SHORT_SHA }}
      - name: Generate Docker URL
        id: test
        run: echo "REPO_URL=${{ secrets.DOCKER_USER }}/waypoints:${{ env.SHORT_SHA }}" >> $GITHUB_ENV
      - name: Check outputs Docker URL
        run: echo ${{ env.REPO_URL }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./waypoint-generator
          push: true
          tags: ${{ env.REPO_URL }}

  update-deployment-configuration:
    runs-on: ubuntu-latest
    needs: [build-and-push-image]
    steps:
      - name: Define SHORT_SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Define REPO_URL
        run: echo "REPO_URL=${{ secrets.DOCKER_USER }}/waypoints:${{ env.SHORT_SHA }}" >> $GITHUB_ENV
      - name: Download yq
        run: sudo snap install yq
      - name: Clone supercharge docs repository
        uses: actions/checkout@v2
        with:
          repository: SDU-QuadSAT-Master/Deployment-Configuration
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
      - run: |
          cd waypoints
          git config user.name "CI"
          git config user.email "ci@quadsat.com"
          tag=${{ env.REPO_URL }} yq -i '.spec.template.spec.containers[0].image = env(tag)' deployment-manifest.yml
          git status
          git add .
          git commit -m "Waypoints Service Update - ${{ env.SHORT_SHA }}"
          git push
